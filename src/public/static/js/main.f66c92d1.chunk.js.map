{"version":3,"sources":["api/service.js","components/authentication/ProtectedRoute/ProtectedRoute.js","templates/GeneralTemplate/GeneralTemplate.style.js","templates/GeneralTemplate/GeneralTemplate.js","templates/FormTemplate/FormTemplate.style.js","templates/FormTemplate/FormTemplate.js","components/molecules/FormEditProfile/FormEditProfile.schema.js","components/molecules/FormEditProfile/FormEditProfile.style.js","components/atoms/Button/Button.js","components/atoms/Input/Input.js","components/atoms/NewInput/NewInput.style.js","components/atoms/NewInput/NewInput.js","components/atoms/Text/Text.js","components/atoms/Title/Title.styles.js","components/molecules/FormEditProfile/FormEditProfile.js","components/molecules/FormLogin/FormLogin.schema.js","components/molecules/FormLogin/FormLogin.style.js","components/molecules/FormLogin/FormLogin.js","components/molecules/FormSignup/FormSignup.schema.js","components/molecules/FormSignup/FormSignup.style.js","components/molecules/FormSignup/FormSignup.js","components/molecules/FormSearchProducts/FormSearchProducts.js","components/molecules/ProductCard/ProductCard.js","pages/EditUserProfile/EditUserProfile.js","components/organisms/HomeContent/HomeContent.js","pages/Home/Home.js","pages/Login/Login.js","pages/Signup/Signup.js","App.js","serviceWorker.js","index.js"],"names":["listProducts","a","api","get","data","subscribeUser","values","post","message","loginUser","getUserInfo","user","this","axios","create","baseURL","process","interceptors","request","use","config","url","includes","tokenInfo","JSON","parse","localStorage","getItem","window","location","type","token","refresh_token","headers","Authorization","response","status","setItem","stringify","removeItem","ProtectedRoute","loggedUser","Component","component","props","render","routeProps","to","Layout","styled","LayoutBase","Link","LinkBase","Header","Sider","Content","GeneralTemplate","state","collapsed","toggle","setState","trigger","collapsible","className","theme","mode","defaultSelectedKeys","Item","key","icon","UserOutlined","VideoCameraOutlined","UploadOutlined","style","padding","React","createElement","MenuUnfoldOutlined","MenuFoldOutlined","onClick","margin","minHeight","children","FormTemplate","src","alt","formSchema","yup","shape","name","required","min","max","email","telephone","matches","password","FormWrapper","Formik","Button","isLoading","method","loading","htmlType","Input","value","onChange","e","target","filterMethod","placeholder","Form","InputBase","InputText","InputAntd","InputMasked","InputWithMask","NewInput","label","mask","handleChange","handleBlur","error","hasMask","hasError","hasTouched","touched","validateStatus","help","maskChar","defaultValue","disabled","onBlur","Text","styles","join","h1","FormEditProfile","isUserInfoLoaded","initialState","onSubmitMethod","actions","ApiService","initialValues","validationSchema","onSubmit","errors","isSubmitting","handleSubmit","active","FormLogin","logUser","useState","loginApiErrorMessage","setLoginApiErrorMessage","onSubmitLogin","action","logged","setSubmitting","history","push","FormSignup","FormSearchProducts","Meta","Card","ProductCard","productQuantity","changeQuantity","productName","productImage","productPrice","productStock","addMethod","hoverable","width","cover","toLowerCase","split","height","title","description","EditUserProfile","HomeContent","products","addToChart","productList","productsArray","map","product","index","span","productImages","length","gutter","displayProducts","Home","Signup","App","verifyLoggedUser","selectedProduct","newChart","chart","filterProducts","searchValue","filteredProducts","filter","displayedProducts","userInfo","exact","path","Login","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.f66c92d1.chunk.js","sourcesContent":["import axios from 'axios';\n\nclass ApiService {\n  constructor() {\n    this.api = axios.create({\n      baseURL: process.env.REACT_APP_API,\n    });\n\n    this.api.interceptors.request.use(async config => {\n      if (config.url.includes('public')) return config;\n      // pegar a token do localStorage\n      // chamar serviço /verify-token\n      // SE verify-token OK -> seta os headers com a token return config (continua com o request normal)\n      // SE verify-token NÃO OK --> tenta bater no refresh-token\n      // /refresh-token ---> entrega novas token e refresh_token\n      // Se o refresh-token OK --> atualiza o localStorage e seta os headers com a nova token e return config\n      // Se o refresh-token NÃO OK --> limpa localStorage e redireciona para o /login\n\n      const tokenInfo = JSON.parse(localStorage.getItem('logged-user-info'));\n\n      if (!tokenInfo) {\n        window.location = '/login';\n\n        return;\n      }\n\n      const { type, token, refresh_token } = tokenInfo;\n      try {\n        await axios.get('http://localhost:5000/api/private/verify-token', { headers: { Authorization: `${type} ${token}` } });\n\n        config.headers.Authorization = `${type} ${token}`;\n        return config;\n      } catch (error) {\n        const { message } = error.response.data;\n        const { status } = error.response;\n\n        if (status === 401 && (message === 'jwt expired' || message === 'Token not found')) {\n          try {\n            const { data } = await axios.get('http://localhost:5000/api/private/refresh-token', { headers: { Authorization: `${type} ${refresh_token}` } })\n            \n            localStorage.setItem('logged-user-info', JSON.stringify(data));\n\n            config.headers.Authorization = `${data.type} ${data.token}`;\n\n            return config;\n          } catch (error) {\n            localStorage.removeItem('logged-user-info');\n\n            window.location = '/login';\n\n            return;\n          }\n        }\n      }\n      return config;\n    });\n  }\n\n  listProducts = async () => {\n    const { data } = await this.api.get('/api/public/products');\n    \n    return data;\n  };\n\n  subscribeUser = async values => {\n    try {\n      const { data } = await this.api.post('/api/public/auth/signup', values);\n      \n      return data;\n    } catch (err) {\n      return err.message;\n    }\n  };\n\n  loginUser = async values => {\n    const { data } = await this.api.post('/api/public/auth/login', values);\n    \n    return data;\n  };\n\n  getUserInfo = async () => {\n    const { data } = await this.api.get('/api/private/user',);\n\n    return data.user || {};\n  };\n}\n\nexport default new ApiService();\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst ProtectedRoute = ({ loggedUser, component: Component, ...props }) => {\n  return loggedUser ? (\n    <Route {...props} render={routeProps => <Component {...props} {...routeProps} />} />\n  ) : <Redirect to=\"/login\" />\n};\n\nexport default ProtectedRoute\n","import styled from 'styled-components';\nimport { Layout as LayoutBase } from 'antd';\nimport { Link as LinkBase } from 'react-router-dom';\n\nexport const Layout = styled(LayoutBase)`\n  min-height: 100vh;\n`;\n\nexport const Link = styled(LinkBase)`\n  margin-left: 100px;\n  color: white;\n`;\n","import React from 'react';\nimport { Menu } from 'antd';\nimport { Layout, Link } from './GeneralTemplate.style';\nimport {\n  MenuUnfoldOutlined,\n  MenuFoldOutlined,\n  UserOutlined,\n  VideoCameraOutlined,\n  UploadOutlined,\n} from '@ant-design/icons';\n\nconst { Header, Sider, Content } = Layout;\n\nclass GeneralTemplate extends React.Component {\n  state = {\n    collapsed: false,\n  };\n\n  toggle = () => {\n    this.setState({\n      collapsed: !this.state.collapsed,\n    });\n  };\n\n  render() {\n    return (\n      <Layout>\n        <Sider trigger={null} collapsible collapsed={this.state.collapsed}>\n          <div className=\"logo\" />\n          <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['1']}>\n            <Menu.Item key=\"1\" icon={<UserOutlined />}>\n              nav 1\n            </Menu.Item>\n            <Menu.Item key=\"2\" icon={<VideoCameraOutlined />}>\n              nav 2\n            </Menu.Item>\n            <Menu.Item key=\"3\" icon={<UploadOutlined />}>\n              nav 3\n            </Menu.Item>\n          </Menu>\n        </Sider>\n        <Layout className=\"site-layout\">\n          <Header className=\"site-layout-background\" style={{ padding: 0 }}>\n            {React.createElement(this.state.collapsed ? MenuUnfoldOutlined : MenuFoldOutlined, {\n              className: 'trigger',\n              onClick: this.toggle,\n            })}\n            <Link to=\"/\">Home</Link>\n            <Link to=\"/signup\">Signup</Link>\n            <Link to=\"/login\">Login</Link>\n          </Header>\n          <Content\n            className=\"site-layout-background\"\n            style={{\n              margin: '24px 16px',\n              padding: 24,\n              minHeight: 280,\n            }}\n          >\n            {this.props.children}\n          </Content>\n        </Layout>\n      </Layout>\n    );\n  }\n}\n\nexport default GeneralTemplate;\n","import styled from 'styled-components';\nimport { Layout as LayoutBase } from 'antd';\nimport { Link as LinkBase } from 'react-router-dom';\n\nexport const Layout = styled(LayoutBase)`\n    min-height: 100vh;\n    background-image: url(../images/background.png);\n    background-position: top;\n    background-repeat: no-repeat;\n    background-size: 100vw 350px;\n`;\n\nexport const Content = styled(LayoutBase.Content)`\n    min-width: 40%;\n    background-color: white;\n    margin: 15vh auto;\n    padding: 50px;\n    max-height: fit-content;\n    box-shadow: 2px 3px 3px rgba(194,190,194,1);\n    @media (max-width: 768px) {\n        margin: 0;\n        box-shadow: none;\n        padding: 20px;\n        max-height: 100%;\n    }\n`;\n\nexport const Header = styled(LayoutBase.Header)`\n    height: fit-content;\n`;\n\nexport const Link = styled(LinkBase)`\n  margin-left: 30px;\n  color: white;\n`;","import React from 'react';\nimport { Layout, Link, Content, Header } from './FormTemplate.style';\n\nconst FormTemplate = ({ children }) => {\n    return (\n        <Layout>\n            <Layout className=\"site-layout\">\n                <Header className=\"site-layout-background\" style={{ padding: 3 }}>\n                    <Link to=\"/\"><img src=\"images/icon.png\" alt=\"hero icon\" /></Link>\n                </Header>\n                <Content className=\"site-layout-background\">\n                    {children}\n                </Content>\n            </Layout>\n        </Layout>\n    );\n}\n\nexport default FormTemplate;","import * as yup from 'yup';\n\nconst phoneRegex = /^\\(\\d{2,3}\\)\\d{4,5}-\\d{4}$/;\n\nconst formSchema = yup.object().shape({\n  name: yup.string()\n    .required('Campo obrigatório')\n    .min(3, 'Mínimo de 3 caracteres')\n    .max(100, 'Máximo de 100 caracteres'),\n  email: yup.string()\n    .required('Campo obrigatório')\n    .email('Formato inválido'),\n  telephone: yup.string()\n    .required('Campo obrigatório')\n    .matches(phoneRegex, 'Formato Inválido')\n    .min(13, 'Mínimo de 13 caracteres')\n    .max(14, 'Máximo de 14 caracteres'),\n  password: yup.string()\n    .required('Campo obrigatório')\n    .min(5, 'Mínimo de 5 caracteres')\n    .max(100, 'Máximo de 100 caracteres'),\n});\n\nexport default formSchema;\n","import styled from 'styled-components';\nimport { Formik } from 'formik';\n\nexport const FormWrapper = styled(Formik)``;\n","import React from 'react';\nimport { Button as ButtonBase } from 'antd'\n\nconst Button = ({ isLoading, children, method, type }) => (\n  <ButtonBase\n    type=\"primary\"\n    loading={isLoading}\n    htmlType={type || 'Button'}\n    onClick={() => method && method()}\n  >\n    {children}\n  </ButtonBase>\n);\n\n\nexport default Button;\n","import React, { Component } from 'react';\nimport { Input as InputAntD } from 'antd';\n\nclass Input extends Component {\n  state = {\n    value: '',\n  };\n\n  onChange = e => {\n    this.setState({\n      value: e.target.value,\n    }, () => {\n      this.props.filterMethod(this.state.value);\n    });\n  }\n\n  render() {\n    const { placeholder, type, name } = this.props;\n\n    return (\n      <InputAntD\n        placeholder={placeholder}\n        type={type}\n        value={this.state.value}\n        name={name}\n        onChange={(e) => this.onChange(e)}\n      />\n    );\n  }\n}\n\nexport default Input;\n","import styled from 'styled-components';\nimport { Form, Input as InputAntd } from 'antd';\nimport InputWithMask from 'react-input-mask';\n\nconst { Item } = Form;\n\nexport const InputBase = styled(Item)``;\n\nexport const InputText = styled(InputAntd)``;\n\nexport const InputMasked = styled(InputWithMask)``;\n","import React from 'react';\nimport { InputBase, InputText, InputMasked } from './NewInput.style';\n\n\nconst NewInput = ({\n  name, label, mask, value, type, isLoading, handleChange, handleBlur, placeholder, error, touched,\n}) => {\n  const hasMask = !!mask;\n  const hasError = !!error;\n  const hasTouched = touched;\n\n  return (\n    <InputBase\n      name={name}\n      label={label}\n      validateStatus={hasError && hasTouched && 'error'}\n      help={hasError && hasTouched && error}\n    >\n      {hasMask ? (\n        <InputMasked\n          className=\"ant-input\"\n          mask={mask}\n          maskChar={null}\n          defaultValue={value}\n          value={value}\n          disabled={isLoading}\n          onChange={handleChange}\n          onBlur={handleBlur}\n          placeholder={placeholder}\n        />\n    ) : (\n        <InputText\n          defaultValue={value}\n          value={value}\n          disabled={isLoading}\n          onChange={handleChange}\n          onBlur={handleBlur}\n          placeholder={placeholder}\n          type={type || 'text'}\n        />\n      )}\n    </InputBase>\n  );\n};\n\nexport default NewInput;\n","import React from 'react';\nimport './text.css';\n\nconst Text = ({ children, styles }) => <p className={styles && styles.join(' ')}>{children}</p>;\n\nexport default Text;\n","import styled from 'styled-components';\n\nexport const Title = styled.h1`\n  color: ${({ styles }) => {\n    return styles === 'primary' ? 'green' : 'blue'}}\n  }\n`;\n","import React, { Component } from 'react';\nimport formSchema from './FormEditProfile.schema';\nimport { FormWrapper } from './FormEditProfile.style';\nimport { NewInput, Button } from '../../atoms';\nimport ApiService from '../../../api/service';\nimport { Skeleton } from 'antd';\n\nclass FormEditProfile extends Component {\n  state = {\n    isUserInfoLoaded: false,\n    initialState: {\n      name: '',\n      email: '',\n      password: '',\n      telephone: '',\n    },\n  };\n\n  async componentDidMount () {\n    const { name, email, password, telephone } = await ApiService.getUserInfo();\n\n    this.setState({\n      initialState: {\n        name, email, password, telephone,\n      },\n      isUserInfoLoaded: true,\n    });\n  };\n\n  onSubmitMethod = async (values, actions) => {\n\n  };\n\n  render() {\n    return this.state.isUserInfoLoaded ? (\n      <FormWrapper\n        initialValues={this.state.initialState}\n        validationSchema={formSchema}\n        onSubmit={this.onSubmitMethod}\n      >\n        {({ values, errors, touched, isSubmitting, handleChange, handleBlur, handleSubmit, ...props }) => (\n          <form onSubmit={handleSubmit}>\n            <NewInput\n              {...props}\n              name=\"name\"\n              label=\"Nome\"\n              placeholder=\"Digite seu nome completo\"\n              defaultValue={values.name}\n              value={values.name}\n              handleChange={handleChange}\n              handleBlur={handleBlur}\n              isLoading={isSubmitting}\n              error={errors.name}\n              touched={touched.name}\n              />\n  \n            <NewInput\n              {...props}\n              name=\"email\"\n              label=\"Email\"\n              placeholder=\"Digite seu email\"\n              defaultValue={values.email}\n              value={values.email}\n              error={errors.email}\n              touched={touched.email}\n              handleChange={handleChange}\n              handleBlur={handleBlur}\n              isLoading={isSubmitting}\n            />\n  \n            <NewInput\n              {...props}\n              name=\"telephone\"\n              label=\"Celular\"\n              placeholder=\"Digite seu telefone celular\"\n              mask=\"(99)99999-9999\"\n              defaultValue={values.telephone}\n              value={values.telephone}\n              error={errors.telephone}\n              touched={touched.telephone}\n              handleChange={handleChange}\n              handleBlur={handleBlur}\n              isLoading={isSubmitting}\n            />\n  \n            <NewInput\n              {...props}\n              name=\"password\"\n              label=\"Senha\"\n              type=\"password\"\n              placeholder=\"Digite sua senha de acesso\"\n              defaultValue={values.password}\n              value={values.password}\n              error={errors.password}\n              touched={touched.password}\n              handleChange={handleChange}\n              handleBlur={handleBlur}\n              isLoading={isSubmitting}\n            />\n  \n            <Button type=\"submit\" isLoading={isSubmitting}>Cadastrar</Button>\n          </form>\n        )}\n      </FormWrapper>\n    ) : (\n      <Skeleton active/>\n    )\n  }\n}\n\nexport default FormEditProfile;\n","import * as yup from 'yup';\n\nconst formSchema = yup.object().shape({\n  email: yup.string()\n    .required('Campo obrigatório')\n    .email('Formato inválido'),\n  password: yup.string()\n    .required('Campo obrigatório')\n    .min(5, 'Mínimo de 5 caracteres')\n    .max(100, 'Máximo de 100 caracteres'),\n});\n\nexport default formSchema;\n","import styled from 'styled-components';\nimport { Formik } from 'formik';\n\nexport const FormWrapper = styled(Formik)``;\n","import React, { useState } from 'react';\nimport formSchema from './FormLogin.schema';\nimport { FormWrapper } from './FormLogin.style';\nimport { NewInput, Button } from '../../atoms';\nimport ApiService from '../../../api/service';\n\nconst FormLogin = ({ logUser, ...props }) => {\n  const [loginApiErrorMessage, setLoginApiErrorMessage] = useState('');\n  const initialState = {\n    email: '',\n    password: '',\n  };\n\n  const onSubmitLogin = async (values, action) => {\n    try {\n      const logged = await ApiService.loginUser(values);\n  \n      logUser();\n  \n      localStorage.setItem('logged-user-info', JSON.stringify(logged));\n  \n      action.setSubmitting(false);\n  \n      props.history.push('/edit-profile');\n    } catch (err) {\n      setLoginApiErrorMessage(err.response.data.message);\n    }\n  };\n\n  return (\n    <FormWrapper\n      initialValues={initialState}\n      validationSchema={formSchema}\n      onSubmit={onSubmitLogin}\n    >\n      {({ values, errors, touched, isSubmitting, handleSubmit, handleChange, handleBlur }) => (\n        <form onSubmit={handleSubmit}>\n          <NewInput\n            {...props}\n            name=\"email\"\n            label=\"Email\"\n            placeholder=\"Digite seu email\"\n            value={values.email}\n            error={errors.email || (loginApiErrorMessage && true)}\n            touched={touched.email}\n            handleChange={handleChange}\n            handleBlur={handleBlur}\n            isLoading={isSubmitting}\n          />\n\n          <NewInput\n            {...props}\n            name=\"password\"\n            label=\"Senha\"\n            type=\"password\"\n            placeholder=\"Digite sua senha de acesso\"\n            value={values.password}\n            error={errors.password || loginApiErrorMessage}\n            touched={touched.password}\n            handleChange={handleChange}\n            handleBlur={handleBlur}\n            isLoading={isSubmitting}\n          />\n\n          <Button type=\"submit\" isLoading={isSubmitting}>Entrar</Button>\n        </form>\n      )}\n    </FormWrapper>\n  );\n};\n\nexport default FormLogin;\n","import * as yup from 'yup';\n\nconst phoneRegex = /^\\(\\d{2,3}\\)\\d{4,5}-\\d{4}$/;\n\nconst formSchema = yup.object().shape({\n  name: yup.string()\n    .required('Campo obrigatório')\n    .min(3, 'Mínimo de 3 caracteres')\n    .max(100, 'Máximo de 100 caracteres'),\n  email: yup.string()\n    .required('Campo obrigatório')\n    .email('Formato inválido'),\n  telephone: yup.string()\n    .required('Campo obrigatório')\n    .matches(phoneRegex, 'Formato Inválido')\n    .min(13, 'Mínimo de 13 caracteres')\n    .max(14, 'Máximo de 14 caracteres'),\n  password: yup.string()\n    .required('Campo obrigatório')\n    .min(5, 'Mínimo de 5 caracteres')\n    .max(100, 'Máximo de 100 caracteres'),\n});\n\nexport default formSchema;\n","import styled from 'styled-components';\nimport { Formik } from 'formik';\n\nexport const FormWrapper = styled(Formik)``;\n","import React from 'react';\nimport formSchema from './FormSignup.schema';\nimport { FormWrapper } from './FormSignup.style';\nimport { NewInput, Button } from '../../atoms';\nimport ApiService from '../../../api/service';\n\nconst FormSignup = props => {\n  const initialState = {\n    name: '',\n    email: '',\n    password: '',\n    telephone: '',\n  };\n\n  const onSubmitMethod = async (values, actions) => {\n    await ApiService.subscribeUser(values);\n    actions.setSubmitting(false);\n\n    props.history.push('/login');\n\n  };\n\n  return (\n    <FormWrapper\n      initialValues={initialState}\n      validationSchema={formSchema}\n      onSubmit={onSubmitMethod}\n    >\n      {({ values, errors, touched, isSubmitting, handleChange, handleBlur, handleSubmit, ...props }) => (\n        <form onSubmit={handleSubmit}>\n          <NewInput\n            {...props}\n            name=\"name\"\n            label=\"Nome\"\n            placeholder=\"Digite seu nome completo\"\n            value={values.name}\n            handleChange={handleChange}\n            handleBlur={handleBlur}\n            isLoading={isSubmitting}\n            error={errors.name}\n            touched={touched.name}\n            />\n\n          <NewInput\n            {...props}\n            name=\"email\"\n            label=\"Email\"\n            placeholder=\"Digite seu email\"\n            value={values.email}\n            error={errors.email}\n            touched={touched.email}\n            handleChange={handleChange}\n            handleBlur={handleBlur}\n            isLoading={isSubmitting}\n          />\n\n          <NewInput\n            {...props}\n            name=\"telephone\"\n            label=\"Celular\"\n            placeholder=\"Digite seu telefone celular\"\n            mask=\"(99)99999-9999\"\n            value={values.telephone}\n            error={errors.telephone}\n            touched={touched.telephone}\n            handleChange={handleChange}\n            handleBlur={handleBlur}\n            isLoading={isSubmitting}\n          />\n\n          <NewInput\n            {...props}\n            name=\"password\"\n            label=\"Senha\"\n            type=\"password\"\n            placeholder=\"Digite sua senha de acesso\"\n            value={values.password}\n            error={errors.password}\n            touched={touched.password}\n            handleChange={handleChange}\n            handleBlur={handleBlur}\n            isLoading={isSubmitting}\n          />\n\n          <Button type=\"submit\" isLoading={isSubmitting}>Cadastrar</Button>\n        </form>\n      )}\n    </FormWrapper>\n  );\n};\n\nexport default FormSignup;\n","import React from 'react';\nimport { Input } from '../../atoms';\n\nconst FormSearchProducts = ({ placeholder, type, name, filterMethod }) => {\n  return (\n    <form>\n      <Input placeholder={placeholder} type={type} name={name} filterMethod={filterMethod} />\n    </form>\n  );\n};\n\nexport default FormSearchProducts;\n","import React, { Component } from 'react';\nimport { Card, Slider, Button } from 'antd';\nimport { Text } from '../../atoms';\n\n\nconst { Meta } = Card;\n\nclass ProductCard extends Component {\n  state = {\n    productQuantity: 1,\n  };\n\n  changeQuantity = value => {\n    this.setState({\n      productQuantity: value,\n    });\n  };\n\n  render() {\n    const { productName, productImage, productPrice, productStock, addMethod } = this.props;\n\n    return(\n      <Card\n        hoverable\n        style={{ width: 300 }}\n        cover={<img alt={productName && productName.toLowerCase().split(' ').join('-')} src={productImage} height=\"300px\" />}\n      >\n        <Meta title={productName} description={`Price: R$ ${productPrice}`} />\n        {\n          productStock === 0 \n          ? <Text>Estoque Indisponível</Text>\n          : (\n            <Slider\n              min={1}\n              max={productStock}\n              onChange={this.changeQuantity}\n              value={this.state.productQuantity}\n            />\n          )\n        }\n        <Button type=\"primary\" onClick={() => addMethod(this.state.productQuantity, productName, productPrice, productImage)}>Adicionar ao Carrinho</Button>\n      </Card>\n    );\n  }\n};\n\nexport default ProductCard;\n","import React, { Component } from 'react';\nimport { GeneralTemplate } from '../../templates';\nimport { FormEditProfile } from '../../components/molecules';\n\nclass EditUserProfile extends Component {\n  render() {\n    return (\n      <GeneralTemplate>\n        <FormEditProfile />\n      </GeneralTemplate>\n    );\n\n  }\n};\n\nexport default EditUserProfile;\n","import React from 'react';\nimport { Col, Row, Skeleton } from 'antd';\nimport { ProductCard } from '../../molecules';\n\nconst HomeContent = ({ products, addToChart }) => {\n  const displayProducts = productList => {\n    const productsArray = productList.map((product, index) => {\n      return (\n        <Col span={6}>\n          <ProductCard\n            key={`product-card-${index + 1}`}\n            productName={product.productName}\n            productImage={product.productImages[0]}\n            productPrice={product.productPrice}\n            productStock={product.productStock}\n            addMethod={addToChart}\n          />\n        </Col>\n      );\n    });\n\n    return products.length === 0 ? <Skeleton active /> : (\n      <Row gutter={24}>\n        {productsArray}\n      </Row>\n    )\n  };\n\n  return (\n    <div>\n      {displayProducts(products)}\n    </div>\n  );\n};\n\nexport default HomeContent;\n","import React, { Component } from 'react';\nimport { GeneralTemplate } from '../../templates';\nimport { Row, Col } from 'antd';\nimport { HomeContent } from '../../components/organisms';\nimport { FormSearchProducts } from '../../components/molecules';\n\nclass Home extends Component {\n  render() {\n    return (\n      <GeneralTemplate>\n        <Row gutter={24}>\n          <Col span={6}>\n          </Col>\n          <Col span={12}>\n            <FormSearchProducts filterMethod={this.props.filterMethod} />\n          </Col>\n          <Col span={6}>\n          </Col>\n        </Row>\n  \n        <HomeContent products={this.props.products} addToChart={this.props.addToChart}/>\n      </GeneralTemplate>\n    );\n  }\n};\n\nexport default Home;\n","import React from 'react';\nimport { FormTemplate } from '../../templates';\nimport { FormLogin } from '../../components/molecules';\n\nconst Signup = props => {\n  return (\n    <FormTemplate>\n      <FormLogin {...props} />\n    </FormTemplate>\n  );\n};\n\nexport default Signup;\n","import React from 'react';\nimport { FormTemplate } from '../../templates';\nimport { FormSignup } from '../../components/molecules';\n\nconst Signup = props => {\n  return (\n    <FormTemplate>\n      NOSSO NOVO CONTEUDO\n      <FormSignup {...props} />\n    </FormTemplate>\n  );\n};\n\nexport default Signup;\n","import React, { Component } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport './App.css';\nimport ApiService from './api/service';\nimport { ProtectedRoute } from './components/authentication';\nimport { Home, Signup, Login, EditUserProfile } from './pages';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      userInfo: {},\n      products: [],\n      displayedProducts: [],\n      chart: {\n        products: [],\n      },\n      loggedUser: null,\n    };\n\n    this.verifyLoggedUser();\n  }\n\n  verifyLoggedUser = async () => {\n    const loggedUserInfo = localStorage.getItem('logged-user-info');\n\n    // eslint-disable-next-line react/no-direct-mutation-state\n    if (loggedUserInfo) {\n      this.state.loggedUser = true;\n    }\n  };\n\n  async componentDidMount() {\n    try {\n      const products = await ApiService.listProducts();\n\n      this.setState({\n        products,\n        displayedProducts: products,\n      });\n    } catch (error) {\n      // redirecionar para uma rota de erro???\n    }\n  }\n\n  logUser = () => {\n    this.setState({\n      loggedUser: true,\n    });\n  }\n\n  addToChart = (productQuantity, productName, productPrice, productImage) => {\n    const selectedProduct = {\n      productQuantity, productName, productPrice, productImage,\n    };\n\n    const newChart = { ...this.state.chart };\n\n    newChart.products.push(selectedProduct);\n\n    this.setState({\n      chart: newChart,\n    });\n  };\n\n  filterProducts = searchValue => {\n    const filteredProducts = this.state.products.filter(product => (\n      product.productName.toLowerCase().includes(searchValue.toLowerCase())\n    ));\n\n    this.setState({ displayedProducts: filteredProducts })\n  }\n\n  render() {\n    return (\n      <Switch>\n        <Route\n          exact\n          path=\"/\"\n          render={props => <Home {...props} products={this.state.displayedProducts} addToChart={this.addToChart} filterMethod={this.filterProducts} />}\n        />\n        <Route\n          exact\n          path=\"/signup\"\n          render={props => <Signup {...props} />}\n        />\n\n        <Route\n          exact\n          path=\"/login\"\n          render={props => <Login {...props} logUser={this.logUser} />}\n        />\n\n        <ProtectedRoute\n          exact\n          path=\"/edit-profile\"\n          loggedUser={this.state.loggedUser}\n          component={EditUserProfile}\n          userInfo={this.state.userInfo}\n        />\n      </Switch>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport 'antd/dist/antd.css'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}